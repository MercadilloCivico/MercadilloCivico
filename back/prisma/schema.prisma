// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id             String   @id @db.Uuid @default(uuid())
  first_name     String
  second_name    String?
  last_name      String
  email          String   @unique
  password       String?
  photo          String?
  google_id      String?  @unique
  rol            String   @default("user")
  proveedor      Proveedor?
  carrito        Carrito_de_Compras?
  compras        Historial_Compras[]
  resenas        Resena[]
  favorites      Producto[]
  subscribe_blog Boolean @default(true)
  disabled       Boolean  @default(false)
}

model Proveedor {
  id           Int       @id @default(autoincrement())
  name_prov    String?
  usuario      Usuario   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id      String    @db.Uuid @unique
  ubicacion String
  tel String
  camaraDeComercio String
  certificadoBancario String
  publicIdCamara String
  publicIdCertificado String
  active Boolean? @default(false)
  productos    ProductoProveedor[]
  puntos_de_venta Punto_De_Venta[]
  pedidos Pedidos_Proveedor[]
  inventario Inventario[]
}

model ProductoProveedor {
  provedor Proveedor @relation(fields: [proveedor_id], references: [id], onDelete: Cascade)
  proveedor_id Int
  producto Producto @relation(fields: [producto_id], references: [id], onDelete: Cascade)
  producto_id String @db.Uuid
  costo Decimal
  @@id([proveedor_id,producto_id])
}

model Producto {
  id            String    @id @db.Uuid @default(uuid())
  name          String    @unique
  description   String?
  image         String
  calification  Int       @default(5)
  ventas        Int?      @default(0)
  proveedor     ProductoProveedor[]
  marca         String
  resenas       Resena[]
  inventario    Inventario[]
  favorites     Usuario[]
  disabled      Boolean   @default(false)
}

model Punto_De_Venta {
  id String @id @db.Uuid @default(uuid())
  company_name String
  address String
  postal_code String?
  contact_email String?
  contact_tel String?
  image String?
  qr_code Bytes?
  provedores Proveedor[]
  inventario Inventario[]
  disabled Boolean @default(false)
}
model Resena {
  id Int @id @default(autoincrement())
  coment String?
  calification Int
  producto Producto @relation(fields: [producto_id], references: [id], onDelete: Cascade)
  producto_id String @db.Uuid
  usuario Usuario @relation(fields: [usuario_id], references: [id], onDelete: Cascade)
  usuario_id String @db.Uuid
  fecha_creacion DateTime @default(now())
  fecha_actualizacion DateTime?
}

model Carrito_de_Compras {
  id Int @id @default(autoincrement())
  productoEnCarrito Producto_En_Carrito[]
  usuario Usuario @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String @db.Uuid @unique
}

model Inventario {
  id Int @id @default(autoincrement())
  punto Punto_De_Venta @relation(fields: [punto_de_venta_id], references: [id], onDelete: Cascade)
  punto_de_venta_id String @db.Uuid
  producto Producto @relation(fields: [producto_id], references: [id], onDelete: Cascade)
  producto_id String @db.Uuid
  proveedor Proveedor @relation(fields: [proveedor_id],references: [id], onDelete: Cascade)
  proveedor_id Int
  stock_min Int
  stock Int
  stock_max Int
  precio_final Decimal
  estado Boolean @default(true)
  productoEnCarrito Producto_En_Carrito[]
}

model Producto_En_Carrito{
  ref Int? @default(autoincrement())
  carrito Carrito_de_Compras @relation(fields: [carritoId], references: [id], onDelete: Cascade)
  carritoId Int
  inventario Inventario @relation(fields: [inventarioId], references: [id], onDelete: Cascade)
  inventarioId Int
  cantidad Int
  @@id([inventarioId, carritoId])
}

model Pedidos_Proveedor {
  id Int @id @default(autoincrement())
  proveedor Proveedor @relation(fields: [prov_id],references: [id], onDelete: Cascade)
  prov_id Int @unique
  productos Reponer_Existencias[]
  fecha_inicio DateTime @default(now())
  fecha_entregado DateTime?
  estado String @default("pendiente")
}
model Reponer_Existencias{
  id Int @id @default(autoincrement())
 pedido Pedidos_Proveedor? @relation(fields: [pedido_id], references: [id], onDelete: Cascade )
  pedido_id Int?
  punto_Venta_Id String
  producto String
  cantidad Int
}
model Historial_Compras {
  id Int @id @default(autoincrement())
  usuario Usuario @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String @db.Uuid
  info_compra String
  fecha DateTime @default(now())
}